.particles-container {
    position: relative;
    width: 100%;
    height: 100vh;
    overflow: hidden;
    background-color: transparent;
    background-image: linear-gradient(60deg, #5438DC 0%, #5438DC 60%, #087E8B 100%);
    //background-image: linear-gradient(60deg, #087E8B 0%, #087E8B 75%, #5438DC 100%);
}

.particles-circle-container {
    $particleCount: 100;
    $particleColor: hsl(180, 100%, 80%);

    position: absolute;
    transform: translateY(-10vh);
    animation-iteration-count: infinite;
    animation-timing-function: linear;

    .particles-circle {
        width: 100%;
        height: 100%;
        border-radius: 50%;
        mix-blend-mode: screen;
        background-image: radial-gradient($particleColor,
                $particleColor 10%,
                hsla(180, 100%, 80%, 0) 56%);

        animation: fadein-frames 200ms infinite, scale-frames 2s infinite;

        @keyframes fade-frames {
            0% {
                opacity: 1;
            }

            50% {
                opacity: 0.7;
            }

            100% {
                opacity: 1;
            }
        }

        @keyframes scale-frames {
            0% {
                transform: scale3d(0.4, 0.4, 1);
            }

            50% {
                transform: scale3d(2.2, 2.2, 1);
            }

            100% {
                transform: scale3d(0.4, 0.4, 1);
            }
        }
    }

    $particleBaseSize: 8;

    @for $i from 1 through $particleCount {
        &:nth-child(#{$i}) {
            $circleSize: random($particleBaseSize);
            width: $circleSize + px;
            height: $circleSize + px;

            $startPositionY: 100;
            $framesName: "move-frames-"+$i;
            $moveDurationMs: 56000+random(18000);
            $moveDuration: $moveDurationMs+ms;

            animation-name: #{$framesName};
            animation-duration: $moveDuration;
            animation-delay: - random($moveDurationMs)+ms;

            @keyframes #{$framesName} {
                0% {
                    transform: translate3d(#{random(100) + vw},
                        #{$startPositionY + vh},
                        0);
                }

                50% {
                    transform: translate3d(#{random(100) + vw},
                        #{- $startPositionY - random(30) + vh},
                        0);
                }

                100% {
                    transform: translate3d(#{random(100) + vw},
                        #{$startPositionY + vh},
                        0);
                }
            }

            .particles-circle {
                animation-delay: random(4000) + ms;
            }
        }
    }
}